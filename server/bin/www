#!/usr/bin/env node
const app = require('../app');
const debug = require('debug')('server:server');
const http = require('http');
const port = '8080';

const sequelize = require('../models').sequelize;

app.set('port', port);
const server = http.createServer(app);

server.listen(port, () => {
  console.log(`Listening on port ${port}...`);
  sequelize.sync();
});
server.on('error', onError);
server.on('listening', onListening);

function onError(error) {
  if (error.syscall !== 'listen') throw error;
  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
}